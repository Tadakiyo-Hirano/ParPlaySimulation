<div id="container" class="container" data-turbolinks='false'>

  <div class="create_strategy_info row">

    <div class="strategy_info_form col-sm-7">

      <%= form_with(url: golfclub_strategy_infos_path, local: true) do |f| %>
        <%# ゴルフ場名、県名 %>
        <%= @golfclub.name %>
        <%= @area.prefecture %>
        <br>
        <%# コース名、HOle.NO、shot %>
        コース
        <%# <%= f.select :course, @courses[1], class: "form-control" %> %>
        <%= f.select :course, @course_options, class: "form-control" %>
        ホール
        <%# < %= f.select :hole, @holes.where(course_id: @courses[0][0]).pluck(:hole_number), class: "form-control select-children" %> %>
        <%= f.select :hole, @hole_options, class: "form-control" %>
        <%# ショット %>
        <%= f.label :shot_id, class: "label-#{yield(:class_text)}" %>
        <%= f.select :shot_id, StrategyInfo.shot_ids.keys, class: "form-control" %>
        ティグラウンド
        <button id="r" class="btn location_btn l_selected">R</button>
        <button id="b" class="btn location_btn">B</button>
        <button id="l" class="btn location_btn">L</button>
        <br>
        <%# 画像up %>
        <div >
          <%= image_tag "", id: "photo_prev", class: "strategy_img" %>
        </div>
        <%= f.file_field :photo, required: true, id: "strategy_photo", class: "form-control-file", accept: "image/png, image/jpg, image/jpeg" %><br>
        <%# --------------------- %>
        <%= f.label :comment, class: "label-#{yield(:class_text)}" %>
        <%= f.text_field :comment, class: "form-control" %>
        <%# location_name %>
        <%= f.hidden_field :location_name, value: "R", class: "form-control" %>
        <%# ピン座標 %>
        <%= f.hidden_field :photo_target_x, value: "0", class: "form-control" %>
        <%= f.hidden_field :photo_target_y, value: "0", class: "form-control" %>
        <%= f.hidden_field :photo_point_x, value: "0", class: "form-control" %>
        <%= f.hidden_field :photo_point_y, value: "0", class: "form-control" %>
        <%= f.hidden_field :photo_size_x, value: "0", class: "form-control" %>
        <%= f.hidden_field :photo_size_y, value: "0", class: "form-control" %>
        <%= f.hidden_field :map_target_x, value: "0", class: "form-control" %>
        <%= f.hidden_field :map_target_y, value: "0", class: "form-control" %>
        <%= f.hidden_field :map_point_x, value: "0", class: "form-control" %>
        <%= f.hidden_field :map_point_y, value: "0", class: "form-control" %>
        <%= f.hidden_field :map_shoot_x, value: "0", class: "form-control" %>
        <%= f.hidden_field :map_shoot_y, value: "0", class: "form-control" %>
        <%= f.hidden_field :map_size_x, value: "0", class: "form-control" %>
        <%= f.hidden_field :map_size_y, value: "0", class: "form-control" %>

        <%= f.submit "新規作成", class: "btn btn-primary btn-block btn-#{yield(:class_text)}" %>
      <% end %>
    </div>

    <div class="location_btns col-sm-2">
      <button id="r" class="btn location_btn l_selected">R</button>
      <button id="b" class="btn location_btn">B</button>
      <button id="l" class="btn location_btn">L</button>
    </div>

    <div id="strategy_map" class=" col-sm-3">
      <%= render 'strategy_infos/form_map', hole: @hole %>
    </div>

  </div>

  <div>
      <p>
        container's mouse event pageX: <span id="pagex"></span>  
                                pageY: <span id="pagey"></span>
      </p>
      ----------------------------------------------------------------
      <p>
        container's mouse event offsetX: <span id="offsetx"></span>  
                                offsetY: <span id="offsety"></span>
      </p>
      ----------------------------------------------------------------
  </div>
</div>

<script>
// コースボタン切り替えによるホールボタン&マップの切り替え
$(function() {
  $('select#course').change(function() {
    let course_id = $(this).val();
    childrenPath = $(this).find('option:selected').data().childrenPath;
    course_data = { 
      course: {
        course_id: course_id,
      }
    };
    $.ajax({
      url: childrenPath,
      type: "GET",
      data: {
        id: "",
        course_data
      },
    });
  });
});

// --------------------------------------------------


// ホールボタン切り替えによるマップの切り替え
$(function() {
  //セレクトボックスが切り替わったら発動
  $('select#hole').change(function() {
    //選択したvalue値を変数に格納
    let hole_id = $(this).val();
    let course_id = $('select#course').val();
    console.log(course_id);
    console.log(hole_id);
    holePath = $(this).find('option:selected').data().holePath;
    console.log(holePath);
    hole_data = { 
      hole: {
        course_id: course_id,
        hole_id: hole_id,
      }
    };
    $.ajax({
      url: holePath,
      type: "GET",
      data: {
        id: "",
        hole_data
      },
    });
  });
});

// --------------------------------------------------


// アップロードする画像ファイル表示
$(function() {
 function readURL(input) {
   if (input.files && input.files[0]) {
     var reader = new FileReader();
     reader.onload = function (e) {
       $('#photo_prev').attr('src', e.target.result);
     }
     reader.readAsDataURL(input.files[0]);
   }
 }
 $("#strategy_photo").change(function(){
   readURL(this);
 });
});

// ---------------------------------------------------


// map表示切替(hole.htmlに記述済み)
  $("#map_b").hide();
  $("#map_l").hide();
  
$('.location_btn').on('click', function () {
  let val = $(this).attr('id');
  let remove_val = $('.l_selected').attr('id');
  $("#map_" + remove_val).hide();
  $('.location_btn').removeClass('l_selected');
  $(this).addClass('l_selected');
  $("#map_" + val).show();
});
// ---------------------------------------------


// // 
// var fileArea = document.getElementById('drag-drop-area');
// var fileInput = document.getElementById('fileInput');

// fileArea.addEventListener('dragover', function(evt){
//   evt.preventDefault();
//   fileArea.classList.add('dragover');
// });

// fileArea.addEventListener('dragleave', function(evt){
//     evt.preventDefault();
//     fileArea.classList.remove('dragover');
// });
// fileArea.addEventListener('drop', function(evt){
//     evt.preventDefault();
//     fileArea.classList.remove('dragenter');
//     var files = evt.dataTransfer.files;
//     fileInput.files = files;
// });
// ｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰｰ



  let map = document.getElementById("map");
  map.style.zIndex = "1";
  let pin = document.getElementById("pin");
  pin.style.position = "absolute";
  pin.style.cursor = "pointer";
  pin.style.zIndex = "2";
  pin.ondragstart = function(e){
    return false;
  }

  window.onload = function(){
    let el = document.getElementById("container");
    console.log(el);
    el.onmousemove = function(e){
      document.getElementById("pagex").innerHTML = e.pageX;
      document.getElementById("pagey").innerHTML = e.pageY;
      document.getElementById("offsetx").innerHTML = e.offsetX;
      document.getElementById("offsety").innerHTML = e.offsetY;
    }
  }

  // ピンのクリック
  document.getElementById("pin").addEventListener('click', function(){
    // const div = document.getElementById('pin');
    // div.classList.toggle('clicked');
    const elem = document.querySelector("#pin");
    elem.classList.toggle('clicked');
  });

  // マップのクリック
  document.getElementById("map").addEventListener('click', function(el){
    var el = document.getElementById("map");

    let pin_x = event.offsetX;
    let pin_y = event.offsetY;
    let client_w = el.clientWidth;
    let client_h = el.clientHeight;

    // ピンの位置情報、mapサイズ
    location_data = { 
      location: {
        // idとピンの位置情報
        // id: strategy_info.id,
        pin_x: pin_x,
        pin_y: pin_y,
        map_x: client_w,
        map_y: client_h,
      }
    };
    
    $.ajax({
        url: 'strategy_infos/ ',
        data: location_data,
        type: 'PATCH'
    });
    
  });
    
    // window.addEventListener("click", function(){
    //   let px = event.pageX;  //クリックX
    //   let py = event.pageY;  //クリックY
    
    //   let ox = window.pageXOffset;  //スクロールX
    //   let oy = window.pageYOffset;  //スクロールY
    
    //   let obj = document.elementFromPoint(px - ox, py - oy);  //object
    
    //   let objX = obj.getBoundingClientRect().left;  //objectのX
    //   let objY = obj.getBoundingClientRect().top;   //objectのY

    //   let pxin = event.offsetX;  //クリックX
    //   let pyin = event.offsetY;  //クリックY
    
    //   console.log("クリックした位置のX座標　x:" + (px-ox));
    //   console.log("クリックした位置のY座標　y:" + (py-oy));
    //   console.log("クリックした要素のX座標　x:" + objX);
    //   console.log("クリックした要素のY座標　y:" + objY);
    //   console.log("クリックした要素内のX座標　x:" + pxin);
    //   console.log("クリックした要素内のY座標　y:" + pyin);
    // });



</script>

<style>
.clicked {
  background-Color: yellow;
}
</style>
