<h1>(view/strategy_infos/)hole.html.erb</h1>
<div class="strategy_hole_bar">

  <div id="strategy_hole_btns">
    <% @holes.each do |hole| %>
    <%# <div class="rotate-<%= cycle(0, 45, 90, 135, 180) %>
      <%= link_to "#{hole.hole_number}",
      # 渡すのはhole_idとR,B,L情報だけでいいかも。
                   main_golfclub_strategy_infos_path(golfclub_id: @golfclub_id, course_id: @course_id, hole_id: hole.id, location: "r"),
                   remote: :true, class: "btn btn-default strategy_hole_btn" %>
    <%# </div> %>
    <% end %>
  </div>

<%# マップの表示するカラムの入れ替え（hole.map_r→hole.map_b %>
  <div class="location_btns">
    <button id="r" class="btn btn-default location l_selected">R</button>
    <button id="b" class="btn btn-default location">B</button>
    <button id="l" class="btn btn-default location">L</button>
  </div>
</div>

<div id="main">
  <%= render 'main', id: @strategy_info.id %> 
</div>

<div class="shot_bar">
  <%= link_to "Tee", "#", class: "btn btn-default" %>
  <%= link_to "2nd", "#", class: "btn btn-default" %>
  <%= link_to "3rd", "#", class: "btn btn-default" %>
  <%= link_to "Green", "#", class: "btn btn-default" %>
</div>

<script>
// 初期状態でクリックされているボタンのクラス付与（eachを使っているボタンのクラス）


// ーーーーーーーーーーーー
  $("#map_b").hide();
  $("#map_l").hide();
  
  $('.location').on('click', function () {
    let val = $(this).attr('id');
    let remove_val = $('.l_selected').attr('id');
    $("#map_" + remove_val).hide();
    $('.location').removeClass('l_selected');
    $(this).addClass('l_selected');
    $("#map_" + val).show();

    // holeボタンの数
    // let hole_btns_num = $('.strategy_hole_btn').length
    // holeボタンを配列に格納
    // let hole_btns = $('.strategy_hole_btn')
    // hole_btns.forEach( function( value ) {
    //   console.log( value.name );
    // });
    //   $(this).attr('href', $(this).attr('href') + "?追加したいパラメータ");
// ----------------------------------
$('.strategy_hole_btn').attr(
  'href',function(){
    if($(this).attr('href').match('location=r')) {
      return $(this).attr('href').replace('location=r', 'location='+val);
    };
    if($(this).attr('href').match('location=b')) {
      return $(this).attr('href').replace('location=b', 'location='+val);
    };
    if($(this).attr('href').match('location=l')) {
      return $(this).attr('href').replace('location=l', 'location='+val);
    };

    // return $(this).attr('href').replace('location=r', 'location='+val);
    // return $(this).attr('href')+'&location='+val
    // return initial_state+'&location='+val
  }
);
// URLにhogeが含まれていたら処理を実行する
// if(document.URL.match("/hoge/")) {
//   $('body').addClass('hoge');
// }
// --------------

// ----------------------------------
    // //a要素を取得する
    // let link = document.getElementByClass('strategy_hole_btn');
    // //a要素のhref属性の値を取得する
    // let oldHref = link.getAttribute('href');
    // //replaceでhref属性の一部（jquery）を新しい値（javascript）に置き換える
    // let newHref = oldHref.replace('jquery', 'javascript');
    // //置き換えた値をa要素のhref属性に設定する
    // link.setAttribute('href', newHref);
  });
</script>